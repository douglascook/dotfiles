### ZSH CONFIG

export ZSH=/Users/douglas/.oh-my-zsh
export UPDATE_ZSH_DAYS=8

ZSH_THEME="muse"
HIST_STAMPS="yyyy-mm-dd"

plugins=(
  aws
  docker
  fzf
  gitfast
  macos
  rand-quote
)

# Don't show AWS profile info in prompt
SHOW_AWS_PROMPT=false

# Fix Docker completion
zstyle ':completion:*:*:docker:*' option-stacking yes
zstyle ':completion:*:*:docker-*:*' option-stacking yes
zstyle ':omz:plugins:docker' legacy-completion yes

source $ZSH/oh-my-zsh.sh

# Display a quote!
quote


### GENERAL

export HISTFILE=~/.zsh_history
export HISTSIZE=50000000
export HISTCONTROL=ignoredups
setopt INC_APPEND_HISTORY

# default to vim rather than vi
export EDITOR=vim

# enable iterm integration
source ~/.iterm2_shell_integration.zsh

# dylan's tunnel helper function
function tunnel {
   ssh -f $1 -L $2:localhost:$3 -N
}

### GIT HELPERS

# before tricky rebases...
alias backup-branch='git branch -D backup && git branch backup'

alias gupdate-commit='git commit --amend --no-edit'

function checkout {
  local selected_branch;
  # git branch lists results with leading spaces so need to trim them
  selected_branch=$(git branch -a | fzf | tr -d '[:space:]');

  if [ -n "$selected_branch" ]; then
    git checkout "${selected_branch}"
  fi
}


### HOMEBREW

# use vim from macvim instead of old system version
alias vim="/Applications/MacVim.app/Contents/MacOS/Vim"
# git defaults to vi which will use built in vim instead of brew one
export GIT_EDITOR=vim

alias tigs="tig status"


### FZF SETUP AND CONFIG
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# fd respects .gitignore by default
export FZF_DEFAULT_COMMAND='fd --type f --hidden --strip-cwd-prefix --exclude .git'

# file search
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_CTRL_T_OPTS="--reverse --no-mouse --height 60% --preview 'head -50 {}'"

# history search
export FZF_CTRL_R_OPTS="--reverse --no-mouse"

# remap file find binding (remove and set)
bindkey -r '^T'
bindkey '^F' fzf-file-widget


### PYTHON

export PATH=/usr/local/opt/python@3/libexec/bin:$PATH

export PYLINTRC=/Users/douglas/.pylintrc
export PYTHONBREAKPOINT=ipdb.set_trace

# remove all pyc files in current dir
alias killpyc="find . -name '*.pyc' -delete"

# virtualenvwrapper-like helper functions
mkdir -p /Users/douglas/.virtualenvs

function mkvirtualenv {
  if [[ $1 = "" ]]; then
    echo "Please specify a name for your environment";
  else
    python3 -m venv /Users/douglas/.virtualenvs/$1;
    source /Users/douglas/.virtualenvs/$1/bin/activate;
  fi
}

function rmvirtualenv {
  rm -r /Users/douglas/.virtualenvs/$1
}

function workon {
  local env_name;
  env_name=$(ls -1 /Users/douglas/.virtualenvs | fzf);

  if [ -n "$env_name" ]; then
    source /Users/douglas/.virtualenvs/$env_name/bin/activate;
  fi
}


### JAVASCRIPT

export REACT_EDITOR=mvim

# react-native development stuff
export ANDROID_HOME=$HOME/Library/Android/sdk
export PATH=$PATH:$ANDROID_HOME/tools:$ANDROID_HOME/tools/bin
export PATH=$PATH:$ANDROID_HOME/platform-tools
export PATH=$PATH:$ANDROID_HOME/emulator
# export JAVA_HOME="$(/usr/libexec/java_home)"


### GO

export PATH=$PATH:/Users/douglas/go/bin


### HOMEBREW POSTGRES

export PATH=$PATH:/usr/local/opt/postgresql@16/bin
